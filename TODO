# vim: set fileencoding=utf-8 :
- Last possibilities reduce to a similar result.

- ExpressionNode.equals() werkend maken voor alle cases (negatie).

- Create unit tests for node inequivalence operator.

- Line printer: 1 / (n + n)x  ->  1 / (n + n) * x

- Modules:
  + Equations with substitution
  + Gonio, no matches for sin(pi), sin(2pi), sin(4pi), etc...

- Fix: int -cf(x) dx (caused infinite loop)
  Solution: remove baby steps that rewrites f(x) to f(x) ^ 1

- Add backslash notation for special LaTeX symbols notation such as \pi?

- Change integral representation in parser so that _ and ^ bounds are printed correctly by line printer.

- Rewrite unit tests to use improved line printer syntax.

- Add notation "1 1/3" for 'int with fraction' leafs, and rules to rewrite them to fractions and back.

- frontend: replace 'dx' with '(dx)' with regex before sending to parser

- "sin^2 x" is supported by parser, but not yet by line printer.

#- To work 100% correctly, POW and SUB (^ and _) should have a precedence equal
#  to INTEGRAL when used for integral bounds.

- Give FUNCTION higher precedence than POW? -> "sin(x) ^ 2 == (sin x) ^ 2"
  rather than "sin(x ^ 2)" (which it is now).

- Add error message to exception in frontend.

# The following now works:
# "apia" no succesfully results in "a * pi * a"
# int_(-3)^(3) \pi (3^2 - x^2) dx  ->  36pi
# int_(-r)^(r) \pi (r^2 - x^2) dx  ->  4 / 3 * pi * r ^ 3
# "&" instead of "^^"

- [((x+3)^5+4)^2]': chain rule should be executed first

- Missed rewrite possibility:
  (4x) / (2x ^ 2 - 2y ^ 2)  ->  (2x) / (x ^ 2 - y ^ 2)

- "indefinite" / "definite" are sometimes confused in messges, fix that...
